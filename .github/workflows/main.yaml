name: CI
on:
  push:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1    # Add your cluster name here.
  GKE_ZONE: us-central1-c   # Add your cluster zone here.
  DEPLOYMENT_NAME: beerlog # Add your deployment name here.
  IMAGE_TAG: ${{ github.sha }}

#jobs:
#  test:
#    strategy:
#      fail-fast: true
#      matrix:
#        python-version: ['3.8', '3.10']
#        os: [ubuntu-latest]
#    runs-on: ${{matrix.os}}
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-python@v2
#        with:
#          python-version: ${{matrix.python-version}}
#      - name: Install Poetry
#        run: pip install --upgrade pip && pip install poetry
#
#      - name: Install Project
#        run: poetry install
#      
#      - name: Look for style errors
#        run: poetry run flake8 beerlog
#      
#      - name: Look for auto format errors
#        run: poetry run black -l 79 --check --diff beerlog tests
#      
#      - name: Run tests
#        run: poetry run pytest -v --junitxml=test-result.xml

jobs:
  credentials:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Get the GKE credentials so we can deploy to the cluster
      - name: Get-GKE-Credentials  
        uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}
      
      # Setup gcloud CLI
      - name: Setup-GKE
        uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
      
      - name: Conect-to-cluster
        run: gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }} --project ${{ env.PROJECT_ID }}
       
      
      - name: Login no Docker Hub
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} 
  
  helm:
    runs-on: ubuntu-latest
    needs: credentials
    steps:

      - name: Install Helm
        run: |-
          curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
          sudo apt-get install apt-transport-https --yes
          echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm

      - name: helm-add-repository
        run: |- 
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
      
      - name: nginx-helm-install
        run: |-
          helm install ingress-nginx ingress-nginx/ingress-nginx

      - name: cert-manager-helm-install
        run: |-
          helm install cert-manager jetstack/cert-manager --version v1.2.0 --set installCRDs=true

  deploy:
    runs-on: ubuntu-latest
    needs: helm 
    steps:

      - name: Buildando a imagem
        run: docker build -t joaolfms/beerlog:${IMAGE_TAG} --file docker/Dockerfile .

      - name: Push para o Docker Hub
        uses: actions-hub/docker@master
        with:
          args: push joaolfms/beerlog:${IMAGE_TAG}

      - name: Update Deployment Image
        run: |-
          sudo add-apt-repository ppa:rmescandon/yq
          sudo apt-get update
          sudo apt-get install -y yq
          export IMAGE_NAME=joaolfms/beerlog:${IMAGE_TAG}
          yq e -i '.spec.template.spec.containers[0].image = env(IMAGE_TAG)' kubernetes/deployment.yaml

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl apply -f ./kubernetes/
          kubectl apply -f ./ingress/
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
