name: CI
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1    # Add your cluster name here.
  GKE_ZONE: us-central1-c   # Add your cluster zone here.
  DEPLOYMENT_NAME: beerlog # Add your deployment name here.

jobs:
  test:
    strategy:
      fail-fast: true
      matrix:
        python-version: ['3.8', '3.10']
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - name: Install Poetry
        run: pip install --upgrade pip && pip install poetry

      - name: Install Project
        run: poetry install
      
      - name: Look for style errors
        run: poetry run flake8 beerlog
      
      - name: Look for auto format errors
        run: poetry run black -l 79 --check --diff beerlog tests
      
      - name: Run tests
        run: poetry run pytest -v --junitxml=test-result.xml
      
      - name: publish junit results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test-result.xml
          check_name: Test Result (Python ${{matrix.python-version}})
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2

      - name: Buildando a imagem
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/beerlog:2.0 --file docker/Dockerfile .

      - name: Login no Docker Hub
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
         id: docker-build-push
         uses: docker/build-push-action@v2
         with:
           context: .
           file: ./docker/Dockerfile
           push: true
           tags: ${{ secrets.DOCKERHUB_USERNAME }}/beerlog:latest

      # Setup gcloud CLI
      - name: Setup-GKE
        uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Get the GKE credentials so we can deploy to the cluster
      - name: Get-GKE-Credentials  
        uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl apply -f ./kubernetes/
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide

